Motivation for Project:
Professor Deverick first shot this idea at me when he understood that I wanted to analzye text, 
popular opinions on current events, and expand upon my machine learning skills. Not only was this
a cool idea, but it could serve an important purpose in bridging the gap between Americans and
how they perceive political events and figures. I mean, I would like to know if SNL is
portraying Kellyanne Conway in an accurate light (i.e. defending and supporting everything 
President Trump states with incredibly flawed logic), of if the liberal news outlets are
portraying Trump more harshly than a moderate or conservative news outlet would. So I gave the
idea a few days of thought and could only think of more reasons to create this project.

Almost all news outlets have an associated bias to themselves. Unfortunately, most Americans
do not have the time of day, or even the care, to look at multiple news sources to see as many
sides of the story as possible. Some people go as far to watch only one side of the political
spectrum's news, which leads to misunderstands on a national scale and a more deeply divided
country that is already polarized to the catastrophic levels it is at now. Some news sites have
even begun to plainly try and deceive their audiences, such as Fox News with its-now-gone "Fair
and Balanced" news model. I would like to bring people to a common ground, making sure they are
informed on how the most popular liberal and conservative news outlets view an event so that
people on all parts of the political specturm understand the viewpoints of one another moreso
than relying on one newsite over another.

Another reason for starting this project is because my loving and supportive significant other,
Hayden Le, and I share a belief that Americans should have easy access to public knowledge as
well as an easy way to access said knowledge and determine the bias found in any article of 
knowledge gathered. This is obviously an impossible dream, but binary classifications can
help us reach our dream. Therefore, learning to use machine elarning algorithms to detect at
least political bias found in texts is still a major leap towards achieving our goal.

Background Research for it:
Research on how to create a website solely with Python and HTML, as well
as a ton of researchon how to implement LSTM-based RNNs, and then the
little amount of published research on hoow to perform.


Political Bias Analysis by Arkajyoti Misra and Sanjib Basak
How to effectively scape google search results by blubee blubeeme
Web Scrrarping Reference by Hartley Brody
Beautiful Soup Documentation https://www.crummy.com/software/BeautifulSoup/bs4/doc/
Political Ideology Detection Using Recursive Neural Networks by Iyyer et. al.
Ranking the media from liberal to conservative, based on their audiences
    by Aaron Blake
A Critical Review of Recurrent Neural Networks for Sequence Learning by
    Zachary Liption, John Berkowitz, and Charles Elkan
Political Ideology Detection by Market Rei 
Top 100 USA News Websites on the Web by Feedspot
LSTM Networks for Sentiment Analysis http://deeplearning.net/tutorial/lstm.html#code
Flask Web Development in Python - 3 - Variablees in your HTML by sentdex
Recurrent Neural Networks Tutorial, Part 2 - Implementing a RNN with
    Python, Numpy and Theano http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano/
Anyone Can Learn to Code an LSTM-RNN in Python (Part 1: RNN) by iamtrask
lstm repository by nicojimenez https://github.com/nicodjimenez/lstm
Recurrent Neural Networks by Tensorflow
An Introduction to LSTMs in Tensorflow by Center for Brains, Minds and 
    Machines (CBMM)
LSTM Networks - The Math of Intelligence (Week 8) by Siraj Raval
A Beginner's Guide to Recurrent Neural Networks and LSTMs by
    DEEPLEARNING4J


Prior Knowledge About Topics:
